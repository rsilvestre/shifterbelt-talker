{"version":3,"sources":["../../src/lib/Exchanger.es6"],"names":[],"mappings":";;;;;;;;;;;;;;IAIqB,SAAS;;;;;;;;AAOjB,WAPQ,SAAS,CAOhB,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE;0BAPtB,SAAS;;AAQ1B,QAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9B,QAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAC5B,QAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;GACnB;;eAZkB,SAAS;;;;;;;;WAmBxB,gBAAU;wCAAN,IAAI;AAAJ,YAAI;;;AAEV,UAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,UAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,UAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,eAAO,GAAG,IAAI,CAAC;OAChB;;AAED,UAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACrB,YAAI,UAAU,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;AACjC,kBAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB,MAAM;AACL,iBAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;OAEF;;AAED,UAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,YAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;AAC7B,YAAI,UAAU,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AAC/C,oBAAU,GAAG,UAAU,GAAG,CAAC,CAAC;AAC5B,kBAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;SACjC;AACD,eAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAC/C;;AAED,aAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;KACjD;;;;;;;;SAMO,YAAG;AACT,aAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;SAMc,UAAC,KAAK,EAAE;AACrB,UAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;;;;;;SAMc,YAAG;AAChB,aAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;SAvEkB,SAAS;;;qBAAT,SAAS","file":"Exchanger.js","sourcesContent":["/**\n * Created by michaelsilvestre on 7/06/15\n */\n\nexport default class Exchanger {\n  /**\n   *\n   * @param {events.EventEmitter} messageOut\n   * @param {events.EventEmitter} messageIn\n   * @param {String} role\n   */\n  constructor(messageOut, messageIn, role) {\n    this._messageOut = messageOut;\n    this._messageIn = messageIn;\n    this._connected = false;\n    this._role = role;\n  }\n\n  /**\n   *\n   * @param {Array} args\n   * @returns {{message: *, callback: *}}\n   */\n  emit(...args) {\n\n    let callback = null;\n    let message = null;\n\n    if (args.length === 0) {\n      message = null;\n    }\n\n    if (args.length === 1) {\n      if (\"function\" === typeof args[0]) {\n        callback = args[0];\n      } else {\n        message = args[0];\n      }\n\n    }\n\n    if (args.length > 1) {\n      let sliceTotal = args.length;\n      if (\"function\" === typeof args[args.length - 1]) {\n        sliceTotal = sliceTotal - 1;\n        callback = args[sliceTotal - 1];\n      }\n      message = args.slice(0, sliceTotal).join(\" \");\n    }\n\n    return { message: message, callback: callback };\n  }\n\n  /**\n   *\n   * @returns {String|*|Exchanger.role}\n   */\n  get role() {\n    return this._role;\n  }\n\n  /**\n   *\n   * @param {boolean|Boolean|*} value\n   */\n  set isConnected(value) {\n    this._connected = value;\n  }\n\n  /**\n   *\n   * @returns {boolean|Boolean|*}\n   */\n  get isConnected() {\n    return this._connected;\n  }\n\n}"]}
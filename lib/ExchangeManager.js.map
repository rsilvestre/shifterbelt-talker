{"version":3,"sources":["ExchangeManager.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;2BAIsB,gBAAgB;;;;IAEjB,eAAe;AACvB,WADQ,eAAe,CACtB,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE;0BADtB,eAAe;;AAEhC,+BAFiB,eAAe,6CAE1B,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE;GACpC;;YAHkB,eAAe;;eAAf,eAAe;;;;;;;;WAUhC,YAAC,KAAK,EAAE,QAAQ,EAAE;AAClB,UAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KAC9C;;;;;;;;;WAOG,cAAC,KAAK,EAAE,GAAG,EAAW;wCAAN,IAAI;AAAJ,YAAI;;;AACtB,UAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,eAAO;OACR;;kDAtBgB,eAAe,uCAwB6B,IAAI;;UAAlD,OAAO,cAAhB,OAAO;UAAqB,QAAQ,cAAlB,QAAQ;;AAEhC,UAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;AAEnF,UAAI,QAAQ,EAAE;AACZ,gBAAQ,EAAE,CAAC;OACZ;KACF;;;SA/BkB,eAAe;;;qBAAf,eAAe","file":"ExchangeManager.js","sourcesContent":["/**\n * Created by michaelsilvestre on 7/06/15\n */\n\nimport Exchanger from './Exchanger.js'\n\nexport default class ExchangeManager extends Exchanger {\n  constructor(messageOut, messageIn, role) {\n    super(messageOut, messageIn, role);\n  }\n\n  /**\n   *\n   * @param {String} event\n   * @param {Function} callback\n   */\n  on(event, callback) {\n    this._messageIn.addListener(event, callback);\n  }\n\n  /**\n   *\n   * @param {String} event\n   * @param {Arguments} args\n   */\n  emit(event, key, ...args) {\n    if (!this.isConnected) {\n      return;\n    }\n\n    let { message: message, callback: callback } = super.emit(...args);\n\n    this._messageOut.emit('send', key, JSON.stringify({ key: event, value: message }));\n\n    if (callback) {\n      callback();\n    }\n  }\n}\n"]}
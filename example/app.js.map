{"version":3,"sources":["app.es6"],"names":[],"mappings":";;;;oCAA8B,0BAA0B;;;;AAExD,IAAI,iBAAiB,GAAG,sCAAsB;AAC5C,KAAG,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,eAAa,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,KAAG,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,UAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,YAAU,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;;AAEH,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,MAAM,EAAK;AAC1C,SAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACxC,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC3B,eAAW,CAAC,YAAK;AACf,YAAM,CAAC,IAAI,CAAC,MAAM,6BAA2B,KAAK,EAAE,CAAG,CAAC;KACzD,EAAE,IAAI,CAAC,CAAC;GACV;;AAED,MAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC5B,eAAW,CAAC,YAAK;AACf,YAAM,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,6BAA2B,KAAK,EAAE,CAAG,CAAC;KACzE,EAAE,IAAI,CAAC,CAAC;GACV;;AAED,QAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,OAAO,EAAK;AAC9B,WAAO,CAAC,GAAG,eAAa,OAAO,CAAG,CAAC;GACpC,CAAC,CAAC;;AAEH,MAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC3B,UAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,OAAO,EAAK;AAC7B,aAAO,CAAC,GAAG,eAAa,OAAO,CAAG,CAAC;KACpC,CAAC,CAAC;GACJ;;AAED,MAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC1B,UAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,MAAM,EAAE,OAAO,EAAK;AACvC,aAAO,CAAC,GAAG,cAAY,MAAM,mBAAc,OAAO,CAAG,CAAC;KACvD,CAAC,CAAC;GACJ;;AAED,QAAM,CAAC,EAAE,CAAC,YAAY,EAAE,YAAM;AAC5B,WAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;GACtC,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,iBAAiB,CAAC,EAAE,CAAC,cAAc,EAAE,UAAC,OAAO,EAAK;AAChD,SAAO,CAAC,GAAG,yBAAuB,OAAO,CAAG,CAAC;CAC9C,CAAC,CAAC","file":"app.js","sourcesContent":["import ShifterbeltClient from '../ShiflterbeltClient.js'\n\nlet shifterbeltClient = new ShifterbeltClient({\n  url: String(process.argv.slice(2,3)[0]),\n  applicationId: Number(process.argv.slice(3, 4)[0]),\n  key: process.argv.slice(4, 5)[0],\n  password: process.argv.slice(5, 6)[0],\n  macAddress: process.argv.slice(6).toString()\n});\n\nshifterbeltClient.on('connect', (socket) => {\n  console.log(\"connected on Shifterbelt\");\n  let count = 0;\n  if (socket.role === \"slave\") {\n    setInterval(()=> {\n      socket.emit('test', `first device message, ${count++}`);\n    }, 3000);\n  }\n\n  if (socket.role === \"master\") {\n    setInterval(()=> {\n      socket.emit('test', 'b8e8563aa597', `first device message, ${count++}`);\n    }, 3000);\n  }\n\n  socket.on('event', (message) => {\n    console.log(`message: ${message}`);\n  });\n\n  if (socket.role === \"slave\") {\n    socket.on('test', (message) => {\n      console.log(`message: ${message}`);\n    });\n  }\n\n  if (socket.role === \"master\") {\n      socket.on('test', (sender, message) => {\n      console.log(`sender: ${sender}, message: ${message}`);\n    });\n  }\n\n  socket.on('disconnect', () => {\n    console.log(\"has been disconnected\");\n  });\n});\n\nshifterbeltClient.on('error_system', (message) => {\n  console.log(`There is an error: ${message}`);\n});\n"]}